name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
      
      - name: Type check
        run: npm run typecheck
      
      - name: Test
        run: npm test
      
      - name: Build
        run: npm run build
      
      # Cache the build output for potential deployment
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ github.sha }}

  analyze-bundle:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Analyze bundle size
        run: npm run analyze
      
      - name: Archive bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: dist/stats.html
          retention-days: 30

  # For demonstration - would integrate with your actual deployment process
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   if: github.ref == 'refs/heads/main'
  #   
  #   steps:
  #     - uses: actions/checkout@v4
  #     
  #     - name: Restore cached build
  #       uses: actions/cache@v4
  #       with:
  #         path: dist
  #         key: ${{ runner.os }}-build-${{ github.sha }}
  #     
  #     - name: Deploy to Cloudflare Pages
  #       uses: cloudflare/wrangler-action@v3
  #       with:
  #         apiToken: ${{ secrets.CF_API_TOKEN }}
  #         accountId: ${{ secrets.CF_ACCOUNT_ID }}
  #         command: pages deploy dist --project-name champagnefestival